###############################################################################
# Generated By: generate.py
# User: -
# Date: -
###############################################################################

from pinaht.knowledge.types.knowledge import Knowledge  # noqa F401


class Executable(Knowledge, str):
    """
    Describes an Executable available on the host.
    """

    def __new__(cls, *args, **kwargs):
        return super(Executable, cls).__new__(cls, args[0])

    def __init__(self, *args, **kwargs):
        """
        Constructor of the class Executable.
        """

        super().__init__()
        self.init_executable(*args)

        self.type = "LEAF_EXTENDS"
        self.lookup = {}

        for key, item in kwargs.items():
            if isinstance(item, list):
                for element in item:
                    self.add_child(key, element)
            else:
                self.add_child(key, item)

    def fuzzy_eq(self, other) -> float:
        if type(self) == type(other):
            if self == other:
                return 1.0
        return 0.0

    def add_child(self, key, child):
        if key not in self.lookup:
            raise ValueError(
                f"Type 'Executable' has no child/attribute with name {key}. "
                "Check types.yaml or the generated PDF for correct identifiers."
            )

        else:
            raise TypeError(f"Child for attribute {key} is not of the right type")

    def init_executable(self, *args):  # noqa F811
        pass

    ### USER DEFINED METHODS ### # noqa: E266
